// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageUrl String
  email    String @unique

  //Relation Of Every Profile With The Server
  servers Server[]

  //Relation of Every Profile As a Member
  members Member[]

  //Relation of Every Profile As a Member
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  imageUrl   String
  inviteCode String

  //Relation With UserProfile
  profileId String  @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id])

  //Relation With the Member
  members Member[]

  //Relation With the Member
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(auto()) @map("_id") @db.ObjectId
  role MemberRole @default(GUEST)

  //Relation With UserProfile
  profileId String  @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id])

  //Relation With Server 
  serverId String @db.ObjectId
  server   Server @relation(fields: [serverId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(auto()) @map("_id") @db.ObjectId
  name String
  type ChannelType @default(TEXT)

  //Relation With UserProfile
  profileId String  @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id])

  //Relation With Server 
  serverId String @db.ObjectId
  server   Server @relation(fields: [serverId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
